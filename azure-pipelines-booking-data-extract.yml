trigger: none

pool:
  vmImage: "ubuntu-latest"

schedules:
#  - cron: "*/5 * * * *"
  - cron: "0 2 * * *"
    displayName: "Booking data extract schedule"
    branches:
      include:
      - APPT-352/*
    batch: false
    always: true

parameters:
  - name: env
    displayName: "Environment to import data into"
    type: string
    default: "exp"
    values: ["dev", "exp", "int", "stag"]
    
variables:
  - group: covid19bookingkv${{parameters.env}}uks
  - group: mya-booking-extract-${{parameters.env}}

stages:
  - stage: "CreateDailyExtract"
    displayName: "Create booking data extract"
    jobs:
      - job: "GenerateBookingDailyExtract"
        displayName: "Generate and send booking extract"
        steps:
          - task: AzureCLI@2
            displayName: "Get Cosmos DB account connection string"
            inputs:
              azureSubscription: "nbs-mya-rg-dev"
              scriptType: pscore
              scriptLocation: scriptPath
              scriptPath: "$(Build.SourcesDirectory)/scripts/cosmos-build/get_cosmos_connection_string.ps1"
              arguments: "-resourceGroup $(resourceGroupName) -cosmosAccountName $(cosmosAccountName)"
          - task: DotNetCoreCLI@2
            displayName: "Run tool to create booking data extract"
            inputs:
              command: "run"
              projects: "data/BookingsDataExtracts/BookingsDataExtracts.csproj"
            env:
              COSMOS_ENDPOINT: $(COSMOS_ENDPOINT)
              COSMOS_TOKEN: $(COSMOS_TOKEN)
              MESH_MAILBOX_DESTINATION: $(toMeshMailboxId)
              MESH_WORKFLOW: $(meshWorkflowId)
              KeyVault_KeyVaultName: covid19bookingkv${{parameters.env}}uks
              KeyVault_TenantId: $(tenantId)
              KeyVault_ClientId: $(ClientId)
              KeyVault_ClientSecret: $(ClientSecret)
              MeshClientOptions_BaseUrl: $(meshApiBaseUri)
              MeshAuthorizationOptions_MailboxId: $(fromMeshMailboxId)
              MeshAuthorizationOptions_CertificateName: $(meshCertificateName)
          - task: PublishBuildArtifacts@1
            displayName: "Publish parquet file"
            inputs:
              PathtoPublish: "*.parquet"
              ArtifactName: "Bookings Data Extract"
