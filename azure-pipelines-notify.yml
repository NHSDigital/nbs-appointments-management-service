trigger: none

pool:
  vmImage: "ubuntu-latest"

parameters:
  - name: env
    displayName: "Environment to import data into"
    type: string
    default: "int"
    values: ["int", "prod"]
  - name: notificationType
    displayName: "Notification being sent"
    type: string
    default: "eligibility"
    values: ["eligibility"]
  - name: servicesFilter
    displayName: "Services filter to extract"
    type: string
    default: "RSV:Adult,COVID:5_11,COVID:12_17,COVID:18+,FLU:18_64,FLU:65+,COVID_FLU:18_64,COVID_FLU:65+,FLU:2_3"
  - name: fromFilter
    displayName: "Date from filter to extract"
    type: string
    default: "2025-10-01"
  - name: toFilter
    displayName: "Date to filter to extract"
    type: string
    default: "2025-10-31"

variables:
  - name: cosmosAccountName
    value: nbs-mya-cdb-${{parameters.env}}-uks  
  - name: storageAccountName
    value: nbsmyastrgimportsintuks
  - name: resourceGroupName
    value: nbs-mya-rg-${{parameters.env}}-uks

stages:
  - stage: "ExportBookingsToBeNotified"
    displayName: "Export Bookings to be notified"
    jobs:
      - job: "ExportBookings"
        displayName: "Export Bookings"
        steps:
          - task: AzureCLI@2
            displayName: "Get Cosmos DB account connection string"
            inputs:
              azureSubscription: "nbs-mya-rg-${{parameters.env}}"
              scriptType: pscore
              scriptLocation: scriptPath
              scriptPath: "$(Build.SourcesDirectory)/scripts/cosmos-build/get_cosmos_connection_string.ps1"
              arguments: "-resourceGroup $(resourceGroupName) -cosmosAccountName $(cosmosAccountName)"
          - task: AzureCLI@2
            displayName: "Get Storage account connection string"
            inputs:
              azureSubscription: "nbs-mya-rg-int"
              scriptType: pscore
              scriptLocation: scriptPath
              scriptPath: "$(Build.SourcesDirectory)/scripts/storage-account/get_storage_account_connection_string.ps1"
              arguments: "-resourceGroup nbs-mya-rg-int-uks -storageAccount $(storageAccountName)"
          - task: DotNetCoreCLI@2
            displayName: "Run tool to create booking extract"
            inputs:
              command: "run"
              projects: "data/JobRunner/JobRunner.csproj"
            env:
              Job: BookingExtract
              COSMOS_ENDPOINT: $(COSMOS_ENDPOINT)
              COSMOS_TOKEN: $(COSMOS_TOKEN)
              FileSenderOptions__Type: blob
              BlobStorageConnectionString: $(BlobStorageConnectionString)
              BookingQueryServices: ${{parameters.servicesFilter}}
              BookingQueryFrom: ${{parameters.fromFilter}}
              BookingQueryTo: ${{parameters.toFilter}}
  - stage: "SendNotifications"
    displayName: "Send Notifications"
    dependsOn:
      - ExportBookingsToBeNotified
    variables:
      - group: nbs-mya-${{parameters.env}}
    jobs:
      - job: ApproveNotifications
        displayName: "Approve Notifications"
        pool: server
        steps:
          - task: ManualValidation@0
            displayName: "Review booking extract"
            inputs:
              notifyUsers: ""
              instructions: Review extract and place into file notify/bookings_to_notify.parquet
      - job: "NotifyBookings"
        displayName: "Notify Bookings"
        dependsOn:
          - ApproveNotifications
        steps:
          - task: AzureCLI@2
            displayName: "Get Storage account connection string"
            inputs:
              azureSubscription: "nbs-mya-rg-${{parameters.env}}"
              scriptType: pscore
              scriptLocation: scriptPath
              scriptPath: "$(Build.SourcesDirectory)/scripts/storage-account/get_storage_account_connection_string.ps1"
              arguments: "-resourceGroup $(resourceGroupName) -storageAccount $(storageAccountName)"
          - task: DotNetCoreCLI@2
            displayName: "Run tool to notify bookings"
            inputs:
              command: "run"
              projects: "data/JobRunner/JobRunner.csproj"
            env:
              Job: ParquetToCSV
              BlobStorageMode: azure
              BlobStorageConnectionString: $(BlobStorageConnectionString)
              Environment: ${{parameters.env}}
              Notification: ${{parameters.notificationType}}