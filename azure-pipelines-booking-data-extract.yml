trigger: none

pool:
  vmImage: "ubuntu-latest"

schedules:
  - cron: "0 2 * * *"
    displayName: "Booking data extract schedule"
    branches:
      include:
      - main
    batch: false
    always: true

parameters:
  - name: env
    displayName: "Environment to import data into"
    type: string
    default: "prod"
    values: ["dev", "int", "stag", "prod"]
    
variables:
  - group: covid19bookingkv${{parameters.env}}uks
  - group: mya-booking-extract-${{parameters.env}}

stages:
  - stage: "CreateDailyExtract"
    displayName: "Create booking data extract"
    jobs:
      - job: "GenerateBookingDailyExtract"
        displayName: "Generate and send booking extract"
        steps:
          - task: AzureCLI@2
            displayName: "Get Cosmos DB account connection string"
            inputs:
              azureSubscription: "nbs-mya-rg-dev"
              scriptType: pscore
              scriptLocation: scriptPath
              scriptPath: "$(Build.SourcesDirectory)/scripts/cosmos-build/get_cosmos_connection_string.ps1"
              arguments: "-resourceGroup $(resourceGroupName) -cosmosAccountName $(cosmosAccountName)"
          - task: DotNetCoreCLI@2
            displayName: "Run tool to create booking data extract"
            inputs:
              command: "run"
              projects: "data/BookingsDataExtracts/BookingsDataExtracts.csproj"
            env:
              COSMOS_ENDPOINT: $(COSMOS_ENDPOINT)
              COSMOS_TOKEN: $(COSMOS_TOKEN)
              MESH_MAILBOX_DESTINATION: $(toMeshMailboxId)
              MESH_WORKFLOW: $(meshWorkflowId)
              KeyVault__KeyVaultName: covid19bookingkv${{parameters.env}}uks
              KeyVault__TenantId: $(tenantId)
              KeyVault__ClientId: $(ClientId)
              KeyVault__ClientSecret: $(ClientSecret)
              MeshClientOptions__BaseUrl: $(meshApiBaseUri)
              MeshAuthorizationOptions__MailboxId: $(fromMeshMailboxId)
              MeshAuthorizationOptions__CertificateName: $(meshCertificateName)          
